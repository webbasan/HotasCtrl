"Roadmap" - sort of...
======================

M1: Java Command Line Application for the X52[pro]
  - Goals:
    - "Get to know the territory"
    - Having tool to initially setup or change occasionally LED/Display settings
    - Initial setup of relevant project infrastructure: dependencies, build deploy, distribute
>>> DONE. Should be considered as "Release 1.0"
    -> TODO: update Maven version properties; there is no "deployment", so nobody will miss it...

M2: "Daemon" mode (still Java based)
    - Currently in "development" branch:
        - Done:
            - "Clock"
            - "Console"
            - generic daemon support
        - WIP:
            - HTTP daemon: runs and accepts basic requests; not thoroughly tested
            - use "Console" mode with named pipes
                - something like 'echo >named_pipe "line3 \"Hello World!\""' should work...
        - ToDo:
            - let App create named pipe, don't rely on user to do the house-keeping
            - allow both simultanously: "console" && "http_port"?
            - use explicit filenames instead of just redirecting stdIO handles..?
                -> "in" instead of stdin
                -> "log" instead of stdout
            - logscan utility:
                - find current logfile
                - scan new entry - do something based on the findings
            - dedicated tool to send commands via named pipe to "HotasCtrl Daemon"?
            - setup launchagent based startup
  - Missing Features:
    - "Marquee Effect" for long text?
    - How to use countdown/stopwatch?
  - Goals:
    => Reduce latency when changing details
    => Allow callback from applications to change setup
    - Configuration files: different "Profiles", i.e. Application specific
    - IPC - How?:
      - ControllerMate can make HTTP-Requests
        -- UPDATE 2:
            Actually, the solution is quite simple: AppleScript allows to call shell scripts directly and
            ControllerMate's "AppleScript Building Block" allows inline Apple Scripts: No need to create one-liner
            Apple- or shell scripts, just something like
            > do shell script "curl http://localhost:8080/line3/Mode%20Blue"
            So, we can use the display to set text messages on a button press. The question remains, which is more
            useful (lower latency, less error prone, open for new fetures):
            simple "echo >named_pipe" or "curl"/"wget" calls?
            For now, keep the "two-headed" approach...
        -- UPDATE 1:
            not quite correct: ControllerMate delegates request to OS, that's why Safari gets called to do the job!
            => Recommendation: use/register custom "protocol" ("hotas://"? - how much "uniqueness" is required..?)
        => REST-like API (although "GET" based...),
           simple HTTP handling would be enough, no need for Servlet-Container
      - How does X-Plane handle it?
        (There is a similar App for X-Plane, but it interferes with the normal stick
         operation -- too much communication?)
      - Test: how much is too much? When does the stick get "hogged"?
      - What use for Oolite? FreeSpaceSCP?

M3: "Native" Command Line Application
  - Java has not enough friends...
  - Reduced latency
  - Potential "back-end" for PrefPane...
  - Evaluate "cross-platform" capability (=> USBlib?)

M4: PrefPane
  - Nice UI to setup the stick
  - "Profile"-Management
  - Start/Stop Daemon

M5: "Native" Daemon
  - Java not a requirement anymore
  - Evaluate suitability of other IPC approaches:
    - OS X: AppleScript Host?
      -> fitness compared to simple HTTP based approach?
    - StdIO
    - Named Pipe? Local Socket?
